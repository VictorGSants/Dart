import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        
        primarySwatch: Colors.deepPurple,
      ),
      home: const MyHomePage(title: 'Calculadora IMC'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

 

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;
  TextEditingController controllerPeso = TextEditingController();
  TextEditingController controllerAltura = TextEditingController();
  String resultadoImc='';
  bool sexo = true;
  String auxsexo = "Masculino";
  late Color cor;
  

  void _incrementCounter() {
    setState(() {
      
      _counter++;
    });
  }
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    cor = Colors.black;
  }

  @override
  Widget build(BuildContext context) {
   
    return Scaffold(
      backgroundColor: Color.fromARGB(144, 255, 255, 255),
      appBar: AppBar(
       
        title: Text(widget.title),
        centerTitle: true,
      ),
      body: Container(
        child: Center(
        
          child: Padding(
            padding: const EdgeInsets.all(8.0),
            child: Column(
              
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                
                
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                Text("Sexo",  style: const TextStyle(fontSize: 25, fontWeight: FontWeight.bold),),
                
                Text(auxsexo, style: const TextStyle(fontSize: 20, color: Colors.black, fontWeight: FontWeight.bold)),
                   Switch(value: sexo, onChanged: (bool value){
                  
                  setState(() {
                    sexo = value;
                    if(sexo == true){
                      auxsexo = "Masculino";
                
                    }else{
                      auxsexo = "Feminino";
                    }
                  });
                }),
                ],),
                SizedBox(height: 16,),
                TextFormField(
                  keyboardType: TextInputType.numberWithOptions(),
                  decoration: const InputDecoration(
                    labelText: "Idade  ",
                    hintText: "Digite sua idade",
                    border: OutlineInputBorder(
                    borderRadius: BorderRadius.all(Radius.circular(15.0))
                  )),
                ),
                SizedBox(height: 16,),
                TextFormField(
                  keyboardType: TextInputType.numberWithOptions(),
                  controller: controllerPeso,
                  decoration: const InputDecoration(
                    labelText: "Peso ",
                    hintText: "Digite seu peso",
                    border: OutlineInputBorder(
                    borderRadius: BorderRadius.all(Radius.circular(15.0))
                  )),
                ),
                SizedBox(height: 16,),
                TextFormField(
                  keyboardType: TextInputType.numberWithOptions(),
                  controller: controllerAltura,
                  decoration: const InputDecoration(
                    labelText: "Altura  ",
                    hintText: "Digite sua altura",
                    border: OutlineInputBorder(
                    borderRadius: BorderRadius.all(Radius.circular(15.0))
                  )),
                ),
                SizedBox(height: 26,),
      
                Container(
                  width: 400,
                  child: ElevatedButton(onPressed:  (){
    setState(() {
      double peso = double.parse(controllerPeso.text);
      double altura = double.parse(controllerAltura.text) / 100;
      double imc = peso / (altura * altura);
      //debugPrint("$imc");
      if (imc < 18.6){
        resultadoImc = "Abaixo do peso (${imc.toStringAsPrecision(4)})"; cor = Color.fromARGB(255, 72, 58, 255);
      }else if (imc >= 18.6 && imc < 24.9){
        resultadoImc = "Peso ideal (${imc.toStringAsPrecision(4)})"; cor = Color.fromARGB(255, 51, 255, 0);
      }else if (imc >= 24.9 && imc < 29.9){
        resultadoImc = "Levemente acima do peso (${imc.toStringAsPrecision(4)})";cor = Color.fromARGB(255, 1, 183, 255);
    }else if (imc >= 29.9 && imc < 34.9){
        resultadoImc = "Obesidade Grau I (${imc.toStringAsPrecision(4)})";cor = Color.fromARGB(255, 230, 107, 99);
                  }else if (imc >= 34.9 && imc < 39.9){
        resultadoImc = "Obesidade Grau II (${imc.toStringAsPrecision(4)})";cor = Color.fromARGB(255, 252, 44, 29);
  }else if (imc >= 40){
        resultadoImc = "Obesidade Grau III (${imc.toStringAsPrecision(4)})";cor = Color.fromARGB(118, 255, 17, 0);
    }});
  }, child: const Text("Clique Aqui") ),
                ),
                SizedBox(height: 32,),
                
                Text('${resultadoImc}',  style: TextStyle(color: cor, fontSize: 25, fontWeight: FontWeight.bold),),
                SizedBox(height: 26,),
                ElevatedButton(onPressed: (){
                  setState(() {
                  resultadoImc = "";
                  });
                },
                  child: const Text("Limpar resultado"),)
              ],
            ),
          ),
        ),
      ),
   // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}